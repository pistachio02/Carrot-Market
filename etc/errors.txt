~~~~~~~~~~~~

    만났던 문제?
    db에 있는 phone이라는 항목의 타입을 BigInt로 해놨었다.
    폰번호가 길수도 있으니까.
    그런데 그렇게 하고 나서 db에 있는 폰번호 정보를 가져다가 응답으로 res.json({폰번호}) 를 해주려고 했더니 아래와 같은 에러가 났다.

    typeerror: do not know how to serialize a bigint at json.stringify (<anonymous>)

    구글 검색해보니 json()을 할 수 있는 타입들이 7개 정도 있는데 그 중 BigInt는 없어서 타입이 BigInt로 되어있는 정보는 res.json()을 할 수 없다는 문제였다.

    그래서 그냥 타입을 다시 int로 바꿨다. 이렇게 하니 res.json({폰번호})는 잘 됬지만, 아마 이게 올바른 해결책은 아닌것같다.
    나중에 더 공부해봐야지.

~~~~~~~~~~~~

    만났던 에러?

    부트캠프 프로젝트때도 만났던 문제.
    날짜 포맷 변경해서 나타내는방법이 문제였다.
    문제라기보다는 날짜 형식이 이상하게 보기 안좋게 나와서 그것을 한국 시간대로 바꾸고,
    또 한글로 표기하는 방법을 적용해보려 할 때 조금 잘 안되는 부분이 있었다.

    데이터를 가져와 맵을 돌려 각각의 태그들에 적용시키고 있었는데,
    예를 들어 맵을 돌릴때 data.createdAt 을 data.createdAt.toLocaleString("ko-KR", {timeZone: "Asia/Seoul"}) 을 바로 적용시켜 보려 했었다.

    이전 부트캠프 프로젝트때에는 서버에서 데이터를 넘겨주기 전에 미리 새로운 객체를 만들어 데이터들을 다 새로 넣어주고,
    넣어주는 과정에서 createdAt 의 값을 createdAt.toLocaleString("ko-KR", {timeZone: "Asia/Seoul"}) 로 미리 변환시키고,
    그 다음 클라이언트로 넘겨줘서 클라에선 받아서 바로 사용하면 됐었는데,
    이번에는 그렇게 하는게 그리 좋은 방법같지 않아서 다르게 해결해보려고 했다.

    그래서 위 말한대로 data.createdAt.toLocaleString("ko-KR", {timeZone: "Asia/Seoul"}) 했더니 에러가 나면서 잘 안먹혔다.
    구글 검색해보니 생각보다 단순한 문제였다.

    .toLocaleString을 할 수 있는 데이터의 타입은 Date Type, 그니까 날짜 타입에만 .toLocaleString을 적용시킬 수 있는것이었다.
    그래서 위 잘 안되던 방법에서 아래와 같이 수정해주니 잘 되었다.

    new Date(createdAt).toLocaleString("ko-KR", {timeZone: "Asia/Seoul"})

    createdAt은 현재 string 형식이기때문에 날짜 형식으로 바꿔줄 수 있는 new Date(createdAt) 이 방법을 먼저 적용시켜서 타입을 바꾸고,
    그 다음 거기에 .toLocaleString("ko-KR", {timeZone: "Asia/Seoul"}) 을 적용하니 문제없이 잘 되었다.

    어떻게 보면 가장 기초적인것이고 이런걸 몰랐다는게 좀 그렇긴 하지만 그래도 이렇게 알았으니 다음부터는 같은 실수를 반복하진 않을 것 같다.

~~~~~~~~~~~~
